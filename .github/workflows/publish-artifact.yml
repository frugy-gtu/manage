name: Publish

on:
  push:
    branches:
      - master

env:
  java_version: '14.x'
  flutter_version: '1.22.3'
  apk_release_directory: 'app/manage/build/app/outputs/flutter-apk'

jobs:
  send_to_play_store:

    name: Build Flutter on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            flutter_path: /opt/hostedtoolcache/flutter
            gradle_path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
              
    defaults:
      run:
        shell: bash
        working-directory: app/manage

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Java/Gradle
        uses: actions/cache@v2
        with:
          path: ${{ matrix.gradle_path }}
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.java_version }}

      - name: Cache Flutter
        uses: actions/cache@v2
        with:
          path: ${{ matrix.flutter_path }}
          key: ${{ runner.os }}-flutter-${{ env.flutter_version }}-${{ hashFiles('**/pubspec.*') }}
          restore-keys: |
            ${{ runner.os }}-flutter-${{ env.flutter_version }}-
            ${{ runner.os }}-flutter-

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.flutter_version }}

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ${{ env.apk_release_directory }}
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app
          path: ${{ env.apk_release_directory }}
